
Phase 1: Defining the Use Case & Competency Questions (DSQs)
1.	What is "Discipline Health" (Semantic Technologies @ RTX)?
o	It's an assessment of the collective capability, risk profile, and future readiness of the Semantic Technologies discipline within a specific context (e.g., a business unit, the entire company).
o	Key Dimensions:
	Coverage & Depth: Do we have enough people with the right level of expertise (from foundational to expert) in core semantic skills (Ontology Modeling, KG Implementation, SPARQL, Reasoning)?
	RTX Specificity: Do we have sufficient capability in company-critical semantic assets (like the REO enterprise ontology, domain ontologies like MRO/DPHM)?
	Risk Concentration: Are critical skills (especially RTX-specific ones) held by too few individuals ("bus factor")?
	Pipeline: Is there a healthy mix of junior, mid-level, and senior practitioners? Are junior members being mentored/developed?
	Application: Are these skills being actively applied to relevant projects/products?
2.	Who Cares & Why (Stakeholders & Value)?
o	Discipline Lead / CoP Lead: Needs to understand capability gaps, identify experts, plan training, foster community, report health upwards.
o	Engineering/Program Managers: Need to staff projects with appropriately skilled individuals, assess feasibility of new semantic tech initiatives.
o	HR / Talent Management: Need to understand workforce capability for strategic planning, targeted recruitment, succession planning.
o	CTO / Strategy Office: Need to assess organizational readiness for AI/Data-centric initiatives heavily reliant on semantic technologies.
o	Value/Profit Link:
	Project Success: Having the right semantic skills ensures projects utilizing KGs, ontologies (like REO for integration), or advanced reasoning can be delivered successfully and on time. Delays cost money.
	Efficiency: Reusing knowledge captured in ontologies (REO), finding experts quickly, avoiding redundant work increases efficiency.
	Innovation: Strong semantic capability enables new product features, better data integration, and more sophisticated AI applications, potentially leading to new revenue streams or competitive advantages.
	Risk Mitigation: Identifying single points of failure for critical skills (e.g., the only REO expert leaves) allows proactive mitigation (training, hiring), preventing project stalls.
	Reduced Costs: Better internal mobility and targeted training reduces reliance on expensive external consultants or recruitment for niche skills.
3.	Decision Support Questions (DSQs) for Semantic Tech Discipline Health:
o	Initial Broad: "How good are we at Semantic Tech?" (Too vague)
o	More Specific: "How many people know SPARQL vs. Ontology Modeling?" (Better, but lacks depth/context)
o	Good DSQ Candidate 1: "What is the distribution of proficiency levels (Junior, Mid, Senior, Expert) for core semantic tech skills (Ontology Modeling, SPARQL, KG Implementation) within the 'Advanced Analytics CoE' Org Unit?" (Focuses on coverage, depth, specific group)
o	Good DSQ Candidate 2: "Who are the recognized experts (Senior/Expert) in Ontology Modeling with demonstrated experience applying the company-specific REO ontology?" (Focuses on depth and critical company-specific knowledge)
o	Good DSQ Candidate 3: "Are there any critical semantic tech skills (e.g., REO expert, MRO expert) held by only one or two individuals across RTX?" (Focuses on risk concentration)
o	Let's select DSQ #1 for this focused demo, potentially with a nod to #2:
"What is the proficiency distribution for core semantic technology skills (Ontology Modeling, SPARQL, KG Implementation, REO Application) within the 'Advanced Analytics CoE' Org Unit?"
Phase 2: Ontology Design (for the selected DSQ)
•	Core Classes Needed:
o	rtx:Person: Represents employees.
o	rtx:Skill: Represents capabilities.
	Instances/Subclasses: rtx:OntologyModeling, rtx:SPARQLQuerying, rtx:KGImplementation, rtx:REOApplicationSkill. We can make these instances of rtx:Skill. Let's also add a parent class rtx:SemanticTechnologySkill.
o	rtx:OrgUnit: Represents organizational structures.
	Instance: rtx:AdvancedAnalyticsCoE
o	rtx:ProficiencyLevel: Represents expertise levels.
	Instances: rtx:Junior, rtx:MidLevel, rtx:Senior, rtx:Expert
o	rtx:SkillAssertion: (Reification Class) To connect Person, Skill, and Proficiency.
•	Key Properties Needed:
o	rtx:Person rdf:type owl:NamedIndividual , rtx:Person .
o	rtx:Skill rdf:type owl:NamedIndividual , rtx:Skill .
o	rtx:OrgUnit rdf:type owl:NamedIndividual , rtx:OrgUnit .
o	rtx:ProficiencyLevel rdf:type owl:NamedIndividual , rtx:ProficiencyLevel .
o	rtx:SkillAssertion rdf:type owl:NamedIndividual , rtx:SkillAssertion .
o	rtx:Person rtx:hasSkillAssertion rtx:SkillAssertion . (Connects person to the assertion node)
o	rtx:SkillAssertion rtx:assertedBy rtx:Person . (Inverse of hasSkillAssertion)
o	rtx:SkillAssertion rtx:assertsSkill rtx:Skill . (Links assertion to the skill type)
o	rtx:SkillAssertion rtx:hasProficiency rtx:ProficiencyLevel . (Links assertion to proficiency level)
o	rtx:Person bfo:0000129 (member part of at some time) rtx:OrgUnit . (Using BFO relation for membership)
o	rtx:OntologyModeling, rtx:SPARQLQuerying, etc. rdfs:subClassOf rtx:SemanticTechnologySkill (Optional, but good practice).
o	rtx:REOApplicationSkill rtx:isCompanySpecific "true"^^xsd:boolean . (Example Data Property)
o	rdfs:label for all instances and classes for readability.
•	Ontology Snippet (Conceptual TTL):
•	      @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
•	@prefix owl: <http://www.w3.org/2002/07/owl#> .
•	@prefix bfo: <http://purl.obolibrary.org/obo/BFO_> .
•	@prefix rtx: <http://rtx.com/ontology/skills#> .
•	
•	# Classes
•	rtx:Person a owl:Class ; rdfs:label "Person" .
•	rtx:Skill a owl:Class ; rdfs:label "Skill" .
•	rtx:OrgUnit a owl:Class ; rdfs:label "Organization Unit" .
•	rtx:ProficiencyLevel a owl:Class ; rdfs:label "Proficiency Level" .
•	rtx:SkillAssertion a owl:Class ; rdfs:label "Skill Assertion" . # Reification class
•	rtx:SemanticTechnologySkill a owl:Class ; rdfs:subClassOf rtx:Skill ; rdfs:label "Semantic Technology Skill" .
•	
•	# Properties
•	rtx:hasSkillAssertion a owl:ObjectProperty ; rdfs:domain rtx:Person ; rdfs:range rtx:SkillAssertion .
•	rtx:assertedBy a owl:ObjectProperty ; rdfs:domain rtx:SkillAssertion ; rdfs:range rtx:Person ; owl:inverseOf rtx:hasSkillAssertion .
•	rtx:assertsSkill a owl:ObjectProperty ; rdfs:domain rtx:SkillAssertion ; rdfs:range rtx:Skill .
•	rtx:hasProficiency a owl:ObjectProperty ; rdfs:domain rtx:SkillAssertion ; rdfs:range rtx:ProficiencyLevel .
•	rtx:isCompanySpecific a owl:DatatypeProperty ; rdfs:domain rtx:Skill ; rdfs:range xsd:boolean .
•	
•	# BFO Relation Usage Example
•	# We'll use bfo:0000129 directly in instance data for Person memberOf OrgUnit
•	
•	# Instances (Examples)
•	rtx:OntologyModeling a rtx:SemanticTechnologySkill ; rdfs:label "Ontology Modeling" .
•	rtx:REOApplicationSkill a rtx:SemanticTechnologySkill ; rdfs:label "REO Application Skill" ; rtx:isCompanySpecific "true"^^xsd:boolean .
•	rtx:SPARQLQuerying a rtx:SemanticTechnologySkill ; rdfs:label "SPARQL Querying" .
•	rtx:KGImplementation a rtx:SemanticTechnologySkill ; rdfs:label "KG Implementation" .
•	
•	rtx:Junior a rtx:ProficiencyLevel ; rdfs:label "Junior" .
•	rtx:MidLevel a rtx:ProficiencyLevel ; rdfs:label "Mid-Level" .
•	rtx:Senior a rtx:ProficiencyLevel ; rdfs:label "Senior" .
•	rtx:Expert a rtx:ProficiencyLevel ; rdfs:label "Expert" .
•	
•	rtx:AdvancedAnalyticsCoE a rtx:OrgUnit ; rdfs:label "Advanced Analytics CoE" .
    
IGNORE_WHEN_COPYING_START
•	Use code with caution. Turtle
IGNORE_WHEN_COPYING_END
Phase 3: Populate Sample Data (Illustrative)
Data Sources Note:
•	Person Name, ID, OrgUnit: Likely from HRIS.
•	Basic Skills (Ontology Modeling, SPARQL): Maybe from Resume scan / JD mapping.
•	Proficiency Levels & REO Application Skill: Must come from Employee Input via the UI.
      @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix bfo: <http://purl.obolibrary.org/obo/BFO_> .
@prefix rtx: <http://rtx.com/ontology/skills#> .

# Persons
rtx:person1 a rtx:Person ; rdfs:label "Alice Alpha" .
rtx:person2 a rtx:Person ; rdfs:label "Bob Bravo" .
rtx:person3 a rtx:Person ; rdfs:label "Charlie Charlie" .
rtx:person4 a rtx:Person ; rdfs:label "Diana Delta" .
rtx:person5 a rtx:Person ; rdfs:label "Evan Echo" . # Outside target group

# Org Unit Membership (Data from HRIS)
rtx:person1 bfo:0000129 rtx:AdvancedAnalyticsCoE .
rtx:person2 bfo:0000129 rtx:AdvancedAnalyticsCoE .
rtx:person3 bfo:0000129 rtx:AdvancedAnalyticsCoE .
rtx:person4 bfo:0000129 rtx:AdvancedAnalyticsCoE .
# person5 is not in this CoE

# Skill Assertions (Proficiency/REO data from Employee Input)
# Alice (Expert Modeler, REO Expert)
rtx:assertion_a1 a rtx:SkillAssertion ; rtx:assertedBy rtx:person1 ; rtx:assertsSkill rtx:OntologyModeling ; rtx:hasProficiency rtx:Expert .
rtx:assertion_a2 a rtx:SkillAssertion ; rtx:assertedBy rtx:person1 ; rtx:assertsSkill rtx:REOApplicationSkill ; rtx:hasProficiency rtx:Expert .
rtx:assertion_a3 a rtx:SkillAssertion ; rtx:assertedBy rtx:person1 ; rtx:assertsSkill rtx:SPARQLQuerying ; rtx:hasProficiency rtx:Senior .
rtx:person1 rtx:hasSkillAssertion rtx:assertion_a1, rtx:assertion_a2, rtx:assertion_a3 .

# Bob (Senior Modeler, Mid REO)
rtx:assertion_b1 a rtx:SkillAssertion ; rtx:assertedBy rtx:person2 ; rtx:assertsSkill rtx:OntologyModeling ; rtx:hasProficiency rtx:Senior .
rtx:assertion_b2 a rtx:SkillAssertion ; rtx:assertedBy rtx:person2 ; rtx:assertsSkill rtx:REOApplicationSkill ; rtx:hasProficiency rtx:MidLevel .
rtx:assertion_b3 a rtx:SkillAssertion ; rtx:assertedBy rtx:person2 ; rtx:assertsSkill rtx:KGImplementation ; rtx:hasProficiency rtx:Senior .
rtx:person2 rtx:hasSkillAssertion rtx:assertion_b1, rtx:assertion_b2, rtx:assertion_b3 .

# Charlie (Mid Modeler, Junior REO, Expert SPARQL)
rtx:assertion_c1 a rtx:SkillAssertion ; rtx:assertedBy rtx:person3 ; rtx:assertsSkill rtx:OntologyModeling ; rtx:hasProficiency rtx:MidLevel .
rtx:assertion_c2 a rtx:SkillAssertion ; rtx:assertedBy rtx:person3 ; rtx:assertsSkill rtx:REOApplicationSkill ; rtx:hasProficiency rtx:Junior .
rtx:assertion_c3 a rtx:SkillAssertion ; rtx:assertedBy rtx:person3 ; rtx:assertsSkill rtx:SPARQLQuerying ; rtx:hasProficiency rtx:Expert .
rtx:person3 rtx:hasSkillAssertion rtx:assertion_c1, rtx:assertion_c2, rtx:assertion_c3 .

# Diana (Junior KG Implementer)
rtx:assertion_d1 a rtx:SkillAssertion ; rtx:assertedBy rtx:person4 ; rtx:assertsSkill rtx:KGImplementation ; rtx:hasProficiency rtx:Junior .
rtx:assertion_d2 a rtx:SkillAssertion ; rtx:assertedBy rtx:person4 ; rtx:assertsSkill rtx:SPARQLQuerying ; rtx:hasProficiency rtx:MidLevel .
rtx:person4 rtx:hasSkillAssertion rtx:assertion_d1, rtx:assertion_d2 .

# Evan (Expert Modeler, but not in the CoE)
rtx:assertion_e1 a rtx:SkillAssertion ; rtx:assertedBy rtx:person5 ; rtx:assertsSkill rtx:OntologyModeling ; rtx:hasProficiency rtx:Expert .
rtx:person5 rtx:hasSkillAssertion rtx:assertion_e1 .
    
IGNORE_WHEN_COPYING_START
Use code with caution. Turtle
IGNORE_WHEN_COPYING_END
Phase 4: SPARQL Query for the DSQ
      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX bfo: <http://purl.obolibrary.org/obo/BFO_>
PREFIX rtx: <http://rtx.com/ontology/skills#>

SELECT ?skillLabel ?proficiencyLabel (COUNT(DISTINCT ?person) AS ?numberOfPeople)
WHERE {
  # Find people in the target Org Unit
  ?person bfo:0000129 rtx:AdvancedAnalyticsCoE .

  # Find their skill assertions
  ?person rtx:hasSkillAssertion ?assertion .
  # Alternative using inverse: ?assertion rtx:assertedBy ?person .

  # Get the skill and proficiency from the assertion
  ?assertion rtx:assertsSkill ?skill .
  ?assertion rtx:hasProficiency ?proficiency .

  # Get labels for readability
  ?skill rdfs:label ?skillLabel .
  ?proficiency rdfs:label ?proficiencyLabel .

  # Ensure we only count Semantic Technology Skills (Optional filter if needed)
  # ?skill rdf:type rtx:SemanticTechnologySkill .
}
GROUP BY ?skillLabel ?proficiencyLabel
ORDER BY ?skillLabel ?proficiencyLabel
    
IGNORE_WHEN_COPYING_START
Use code with caution. Sparql
IGNORE_WHEN_COPYING_END
Phase 5: Expected Output & Interpretation
skillLabel	proficiencyLabel	numberOfPeople
KG Implementation	Junior	1
KG Implementation	Senior	1
Ontology Modeling	Expert	1
Ontology Modeling	Mid-Level	1
Ontology Modeling	Senior	1
REO Application Skill	Expert	1
REO Application Skill	Junior	1
REO Application Skill	Mid-Level	1
SPARQL Querying	Expert	1
SPARQL Querying	Mid-Level	1
SPARQL Querying	Senior	1
Interpretation for Discipline Health:
"Within the Advanced Analytics CoE:
•	Ontology Modeling: We have coverage across Mid-Level (1), Senior (1), and Expert (1). This looks reasonably healthy in terms of depth.
•	SPARQL Querying: Good coverage from Mid-Level (1) to Expert (1).
•	KG Implementation: Some coverage at Junior (1) and Senior (1), potentially needs more mid-level depth or a larger pool overall depending on demand.
•	REO Application Skill (Critical): We have representation at Junior (1), Mid-Level (1), and Expert (1). While we have an expert (Alice), the total number of people with any REO skill is only 3. This indicates a potential risk. If Alice is unavailable, the next highest proficiency is Mid-Level (Bob). Depending on project needs, this might be insufficient backup for critical REO tasks.
•	Inference/Insight: The query directly aggregates data based on the graph structure (Person -> memberOf -> OrgUnit, Person -> hasSkillAssertion -> assertsSkill/hasProficiency). The interpretation of this aggregated data provides the "Discipline Health" insight, highlighting the potential risk around the company-specific REO skill concentration and depth. This informs decisions about targeted training (e.g., getting Charlie more REO exposure), mentorship (Alice mentoring Bob/Charlie), or highlighting the need if recruiting."
This detailed walkthrough shows how to move from a business need (Discipline Health) to actionable insights via competency questions, ontology modeling, data population (including employee input), and targeted SPARQL queries on the knowledge graph.

=======================================


@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix bfo: <http://purl.obolibrary.org/obo/BFO_> .
@prefix rtx: <http://rtx.com/ontology/skills#> .

# Classes
rtx:Person a owl:Class ; rdfs:label "Person" .
rtx:Skill a owl:Class ; rdfs:label "Skill" .
rtx:OrgUnit a owl:Class ; rdfs:label "Organization Unit" .
rtx:ProficiencyLevel a owl:Class ; rdfs:label "Proficiency Level" .
rtx:SkillAssertion a owl:Class ; rdfs:label "Skill Assertion" . # Reification class
rtx:SemanticTechnologySkill a owl:Class ; rdfs:subClassOf rtx:Skill ; rdfs:label "Semantic Technology Skill" .

# Properties
rtx:hasSkillAssertion a owl:ObjectProperty ; rdfs:domain rtx:Person ; rdfs:range rtx:SkillAssertion .
rtx:assertedBy a owl:ObjectProperty ; rdfs:domain rtx:SkillAssertion ; rdfs:range rtx:Person ; owl:inverseOf rtx:hasSkillAssertion .
rtx:assertsSkill a owl:ObjectProperty ; rdfs:domain rtx:SkillAssertion ; rdfs:range rtx:Skill .
rtx:hasProficiency a owl:ObjectProperty ; rdfs:domain rtx:SkillAssertion ; rdfs:range rtx:ProficiencyLevel .
rtx:isCompanySpecific a owl:DatatypeProperty ; rdfs:domain rtx:Skill ; rdfs:range xsd:boolean .

# BFO Relation Usage Example
# We'll use bfo:0000129 directly in instance data for Person memberOf OrgUnit

# Instances (Examples)
rtx:OntologyModeling a rtx:SemanticTechnologySkill ; rdfs:label "Ontology Modeling" .
rtx:REOApplicationSkill a rtx:SemanticTechnologySkill ; rdfs:label "REO Application Skill" ; rtx:isCompanySpecific "true"^^xsd:boolean .
rtx:SPARQLQuerying a rtx:SemanticTechnologySkill ; rdfs:label "SPARQL Querying" .
rtx:KGImplementation a rtx:SemanticTechnologySkill ; rdfs:label "KG Implementation" .

rtx:Junior a rtx:ProficiencyLevel ; rdfs:label "Junior" .
rtx:MidLevel a rtx:ProficiencyLevel ; rdfs:label "Mid-Level" .
rtx:Senior a rtx:ProficiencyLevel ; rdfs:label "Senior" .
rtx:Expert a rtx:ProficiencyLevel ; rdfs:label "Expert" .

rtx:AdvancedAnalyticsCoE a rtx:OrgUnit ; rdfs:label "Advanced Analytics CoE" .

@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix bfo: <http://purl.obolibrary.org/obo/BFO_> .
@prefix rtx: <http://rtx.com/ontology/skills#> .

# Persons
rtx:person1 a rtx:Person ; rdfs:label "Alice Alpha" .
rtx:person2 a rtx:Person ; rdfs:label "Bob Bravo" .
rtx:person3 a rtx:Person ; rdfs:label "Charlie Charlie" .
rtx:person4 a rtx:Person ; rdfs:label "Diana Delta" .
rtx:person5 a rtx:Person ; rdfs:label "Evan Echo" . # Outside target group

# Org Unit Membership (Data from HRIS)
rtx:person1 bfo:0000129 rtx:AdvancedAnalyticsCoE .
rtx:person2 bfo:0000129 rtx:AdvancedAnalyticsCoE .
rtx:person3 bfo:0000129 rtx:AdvancedAnalyticsCoE .
rtx:person4 bfo:0000129 rtx:AdvancedAnalyticsCoE .
# person5 is not in this CoE

# Skill Assertions (Proficiency/REO data from Employee Input)
# Alice (Expert Modeler, REO Expert)
rtx:assertion_a1 a rtx:SkillAssertion ; rtx:assertedBy rtx:person1 ; rtx:assertsSkill rtx:OntologyModeling ; rtx:hasProficiency rtx:Expert .
rtx:assertion_a2 a rtx:SkillAssertion ; rtx:assertedBy rtx:person1 ; rtx:assertsSkill rtx:REOApplicationSkill ; rtx:hasProficiency rtx:Expert .
rtx:assertion_a3 a rtx:SkillAssertion ; rtx:assertedBy rtx:person1 ; rtx:assertsSkill rtx:SPARQLQuerying ; rtx:hasProficiency rtx:Senior .
rtx:person1 rtx:hasSkillAssertion rtx:assertion_a1, rtx:assertion_a2, rtx:assertion_a3 .

# Bob (Senior Modeler, Mid REO)
rtx:assertion_b1 a rtx:SkillAssertion ; rtx:assertedBy rtx:person2 ; rtx:assertsSkill rtx:OntologyModeling ; rtx:hasProficiency rtx:Senior .
rtx:assertion_b2 a rtx:SkillAssertion ; rtx:assertedBy rtx:person2 ; rtx:assertsSkill rtx:REOApplicationSkill ; rtx:hasProficiency rtx:MidLevel .
rtx:assertion_b3 a rtx:SkillAssertion ; rtx:assertedBy rtx:person2 ; rtx:assertsSkill rtx:KGImplementation ; rtx:hasProficiency rtx:Senior .
rtx:person2 rtx:hasSkillAssertion rtx:assertion_b1, rtx:assertion_b2, rtx:assertion_b3 .

# Charlie (Mid Modeler, Junior REO, Expert SPARQL)
rtx:assertion_c1 a rtx:SkillAssertion ; rtx:assertedBy rtx:person3 ; rtx:assertsSkill rtx:OntologyModeling ; rtx:hasProficiency rtx:MidLevel .
rtx:assertion_c2 a rtx:SkillAssertion ; rtx:assertedBy rtx:person3 ; rtx:assertsSkill rtx:REOApplicationSkill ; rtx:hasProficiency rtx:Junior .
rtx:assertion_c3 a rtx:SkillAssertion ; rtx:assertedBy rtx:person3 ; rtx:assertsSkill rtx:SPARQLQuerying ; rtx:hasProficiency rtx:Expert .
rtx:person3 rtx:hasSkillAssertion rtx:assertion_c1, rtx:assertion_c2, rtx:assertion_c3 .

# Diana (Junior KG Implementer)
rtx:assertion_d1 a rtx:SkillAssertion ; rtx:assertedBy rtx:person4 ; rtx:assertsSkill rtx:KGImplementation ; rtx:hasProficiency rtx:Junior .
rtx:assertion_d2 a rtx:SkillAssertion ; rtx:assertedBy rtx:person4 ; rtx:assertsSkill rtx:SPARQLQuerying ; rtx:hasProficiency rtx:MidLevel .
rtx:person4 rtx:hasSkillAssertion rtx:assertion_d1, rtx:assertion_d2 .

# Evan (Expert Modeler, but not in the CoE)
rtx:assertion_e1 a rtx:SkillAssertion ; rtx:assertedBy rtx:person5 ; rtx:assertsSkill rtx:OntologyModeling ; rtx:hasProficiency rtx:Expert .
rtx:person5 rtx:hasSkillAssertion rtx:assertion_e1 .


================

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX bfo: <http://purl.obolibrary.org/obo/BFO_>
PREFIX rtx: <http://rtx.com/ontology/skills#>

SELECT ?skillLabel ?proficiencyLabel (COUNT(DISTINCT ?person) AS ?numberOfPeople)
WHERE {
  # Find people in the target Org Unit
  ?person bfo:0000129 rtx:AdvancedAnalyticsCoE .

  # Find their skill assertions
  ?person rtx:hasSkillAssertion ?assertion .
  # Alternative using inverse: ?assertion rtx:assertedBy ?person .

  # Get the skill and proficiency from the assertion
  ?assertion rtx:assertsSkill ?skill .
  ?assertion rtx:hasProficiency ?proficiency .

  # Get labels for readability
  ?skill rdfs:label ?skillLabel .
  ?proficiency rdfs:label ?proficiencyLabel .

  # Ensure we only count Semantic Technology Skills (Optional filter if needed)
  # ?skill rdf:type rtx:SemanticTechnologySkill .
}
GROUP BY ?skillLabel ?proficiencyLabel
ORDER BY ?skillLabel ?proficiencyLabel
